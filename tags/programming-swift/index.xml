<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming, swift on Jan Savage</title>
    <link>https://dersavage.github.io/main/tags/programming-swift/</link>
    <description>Recent content in programming, swift on Jan Savage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 29 Jan 2023 13:12:52 +0800</lastBuildDate><atom:link href="https://dersavage.github.io/main/tags/programming-swift/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Truly Object-oriented in &#39;Twin Peaks&#39;</title>
      <link>https://dersavage.github.io/main/tutorials/oop-in-swift-grounds/</link>
      <pubDate>Sun, 29 Jan 2023 13:12:52 +0800</pubDate>
      
      <guid>https://dersavage.github.io/main/tutorials/oop-in-swift-grounds/</guid>
      <description>This is the first post in the CR&amp;ndash;Code Review&amp;ndash;series. I hit upon the idea after I found this interesting discussion regarding Swift playgrounds, book 2 (Let&amp;rsquo;s Code 2), chapter named &amp;lsquo;Twin Peaks&amp;rsquo; in Scrabtree&amp;rsquo;s website, where he lamented his very long solution compared to Samantha&amp;rsquo;s shorter solution.
The purpose of this CR is to bring learners&amp;rsquo; attention to an interesting thing about object orientation: objects can be interdependent even if they were instantiated independently.</description>
    </item>
    
  </channel>
</rss>
